@inject IConfiguration conf
@model List<(string Url, string Title)>
@{
    string continuity = "";

    foreach(var pair in Context.Request.Query)
        if(pair.Key != "page")
            continuity += (pair.Value == "" || pair.Value == "#") ? "" : $"&{pair.Key}={pair.Value}";

    string current_page = Context.Request.Query.ContainsKey("page") ? Context.Request.Query["page"] : "1";
}
@if (Model.Count > 1)
{
    <div class="dc-pagination">
        <ul class="dc-pagination__list">
            @foreach ((string Url, string Title) item in Model)
            {
                if (item.Title == current_page)
                {
                    <li class="dc-pagination__list-item-wrapper">
                        <span class="dc-pagination__item dc-pagination__item_active dcg-caption">
                            @item.Title
                        </span>
                    </li>
                }
                else
                {
                    <li class="dc-pagination__list-item-wrapper">
                        <a href="@(item.Url + continuity)" class="dc-pagination__item dcg-caption">
                            @item.Title
                        </a>
                    </li>
                }
            }
        </ul>
        <div class="dc-pagination__btn-next">
            <span class="dc-pagination__next-name dcg-caption">Next</span>
            <svg width="14" height="11" viewBox="0 0 14 11" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M7.80593 11L6.87624 10.0824L10.7037 6.25497H0.791016V4.92685H10.7037L6.87624 1.11151L7.80593 0.181818L13.215 5.59091L7.80593 11Z" fill="rgba(221, 234, 250, 0.92)"/>
            </svg>
        </div>
    </div>
}

